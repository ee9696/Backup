/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-11-05 08:52:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.imageboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class imageboardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1633489743738L));
    _jspx_dependants.put("jar:file:/D:/java_ee/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MQBProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("th {\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subjectA:link { color: black; text-decoration: none; }\r\n");
      out.write(".subjectA:visited { color: black; text-decoration: none; }\r\n");
      out.write(".subjectA:hover { color: darkgreen; text-decoration: underline; }\r\n");
      out.write(".subjectA:active { color: black; text-decoration: none; }\r\n");
      out.write("\r\n");
      out.write("#currentPaging {\r\n");
      out.write("	color: red;\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border: 1px solid red;\r\n");
      out.write("}\r\n");
      out.write("#paging {\r\n");
      out.write("	color: black;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<form id=\"imageboardDeleteForm\" method=\"get\" action=\"/MQBProject/imageboard/imageboardDelete.do\">\r\n");
      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"pg\" style=\"margin-top:5px;\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.pg }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<table id=\"imageboardListTable\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\" frame=\"hsides\" rules=\"rows\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th width=\"100\"><input type=\"checkbox\" id=\"all\">글번호</th>\r\n");
      out.write("		<th width=\"100\">이미지</th>\r\n");
      out.write("		<th width=\"200\">상품명</th>\r\n");
      out.write("		<th width=\"150\">단가</th>\r\n");
      out.write("		<th width=\"50\">개수</th>\r\n");
      out.write("		<th width=\"150\">합계</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<input type=\"button\" id=\"choiceDeleteBtn\" style=\"float:left;\" value=\"선택삭제\"> <!-- style=\"float: left;\" -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"imageboardPagingDiv\" style=\"display:inline-block; width:700px; text-align:center;\"></div>\r\n");
      out.write("</form>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'/MQBProject/imageboard/getImageboardList.do',\r\n");
      out.write("		type:'post',\r\n");
      out.write("		data:'pg=' + $('#pg').val(),\r\n");
      out.write("		dataType:'json',\r\n");
      out.write("		success: function(data) {\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			\r\n");
      out.write("			$.each(data.list, function(index, items) {\r\n");
      out.write("				$('<tr>').append($('<td/>', {\r\n");
      out.write("					align:'center',\r\n");
      out.write("					text:items.seq\r\n");
      out.write("					\r\n");
      out.write("					}).prepend($('<input/>',{\r\n");
      out.write("						type:'checkbox',\r\n");
      out.write("						class:'check',\r\n");
      out.write("						name: 'check',\r\n");
      out.write("						value: items.seq\r\n");
      out.write("					}))\r\n");
      out.write("				).append($('<td/>',{\r\n");
      out.write("					align:'center',\r\n");
      out.write("					\r\n");
      out.write("				}).append($('<img/>',{\r\n");
      out.write("					src:'/MQBProject/storage/' + items.image1,\r\n");
      out.write("					alt: items.image1,\r\n");
      out.write("					style: 'width: 70px; height: 70px; cursor: pointer;'\r\n");
      out.write("					\r\n");
      out.write("				}))\r\n");
      out.write("				).append($('<td/>',{\r\n");
      out.write("					align:'center',\r\n");
      out.write("					text:items.imageName\r\n");
      out.write("					\r\n");
      out.write("				})).append($('<td/>',{\r\n");
      out.write("					align:'center',\r\n");
      out.write("					text:items.imagePrice.toLocaleString()\r\n");
      out.write("					\r\n");
      out.write("				})).append($('<td/>',{\r\n");
      out.write("					align:'center',\r\n");
      out.write("					text:items.imageQty.toLocaleString()\r\n");
      out.write("					\r\n");
      out.write("				})).append($('<td/>',{\r\n");
      out.write("					align:'center',\r\n");
      out.write("					text:(items.imagePrice*items.imageQty).toLocaleString()	\r\n");
      out.write("				})).appendTo($('#imageboardListTable'));\r\n");
      out.write("			}); //each\r\n");
      out.write("			\r\n");
      out.write("			//페이징 처리\r\n");
      out.write("			$('#imageboardPagingDiv').html(data.imageboardPaging);\r\n");
      out.write("		},\r\n");
      out.write("		error: function(err) {\r\n");
      out.write("			console.log(err);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function imageboardPaging(param_pg) {\r\n");
      out.write("	location.href = '/MQBProject/imageboard/imageboardList.do?pg='+param_pg;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//전체 선택 전체 해제\r\n");
      out.write("$('#all').click(function(){\r\n");
      out.write("	if($('#all').prop(\"checked\")) {\r\n");
      out.write("		$('.check').prop(\"checked\", true);\r\n");
      out.write("	}else{\r\n");
      out.write("		$('.check').prop(\"checked\", false);\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//선택 삭제\r\n");
      out.write("$('#choiceDeleteBtn').click(function(){\r\n");
      out.write("	var count = $('.check:checked').length;\r\n");
      out.write("	\r\n");
      out.write("	if(count==0)\r\n");
      out.write("		alert('삭제 할 항목을 선택하세요');\r\n");
      out.write("	else {\r\n");
      out.write("		if(confirm('정말로 삭제하시겠습니까?'))\r\n");
      out.write("			$('#imageboardDeleteForm').submit();\r\n");
      out.write("	}\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
