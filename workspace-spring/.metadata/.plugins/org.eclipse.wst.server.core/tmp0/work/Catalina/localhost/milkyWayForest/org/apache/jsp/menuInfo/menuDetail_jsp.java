/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-12 06:32:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.menuInfo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menuDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/milkyWayForest/css/menuInfo.css\">\r\n");
      out.write("\r\n");
      out.write("<form id=\"menuDetailForm\" name=\"menuDetailForm\">\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<section id=\"content_box\">\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"menuDetailNav\">\r\n");
      out.write("			<div>\r\n");
      out.write("				<a href=\"/milkyWayForest/\"><img src=\"/milkyWayForest/image/icon_home.png\" alt=\"홈\"></a> > \r\n");
      out.write("				<a href=\"/milkyWayForest/menuInfo\">Menu</a> > \r\n");
      out.write("				<a href=\"\" id=\"category\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${category }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a> > \r\n");
      out.write("				<a href=\"\" id=\"smallMenu\"></a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br><br>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"menuDetailView\">\r\n");
      out.write("			<div id=\"menuImgDiv\" class=\"items\">\r\n");
      out.write("				<img id=\"bigImg\">\r\n");
      out.write("				<ul class=\"imgList\">\r\n");
      out.write("					<li class=\"on\"><img></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"menuName\" class=\"items\"></div>\r\n");
      out.write("			<div id=\"menuDetail\" class=\"items\"></div>\r\n");
      out.write("			<div id=\"menuNutri\" class=\"items\">\r\n");
      out.write("				<div id=\"menuWeight\" class=\"items\">제품영양정보</div>\r\n");
      out.write("				<div id=\"menuLeftInfo\" class=items>\r\n");
      out.write("					<div id=\"menuKcal1\">1회 제공량 (kcal)\r\n");
      out.write("					<span id=\"menuKcal2\"></span></div>\r\n");
      out.write("					<div id=\"menuSugar1\">당류 (g) \r\n");
      out.write("					<span id=\"menuSugar2\"></span></div>\r\n");
      out.write("					<div id=\"menuFat1\">포화지방 (g)\r\n");
      out.write("					<span id=\"menuFat2\"></span></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"menuRightInfo\" class=\"items\">\r\n");
      out.write("					<div id=\"menuProtein1\">단백질 (g)\r\n");
      out.write("					<span id=\"menuProtein2\"></span></div>\r\n");
      out.write("					<div id=\"menuSodium1\">나트륨 (mg)\r\n");
      out.write("					<span id=\"menuSodium2\"></span></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"menuFactor\" class=\"items\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	<!-- <div class=\"productView\">\r\n");
      out.write("		테이블로 상품이름 및 용량 가격 옵션 등 넣기 \r\n");
      out.write("		<table id=\"detailTable\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"productKorName\" colspan=\"2\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"productEngName\" colspan=\"2\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" id=\"productDetail\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"menuNutriInfo\"></div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"menuDetailImg\">\r\n");
      out.write("			<img id=\"bigImg\">\r\n");
      out.write("				<ul class=\"imgList\">\r\n");
      out.write("					<li class=\"on\"><img></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("	</div> -->\r\n");
      out.write("		\r\n");
      out.write("	</section>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: '/milkyWayForest/menuInfo/getMenuDetail',\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		data: 'menuCode=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menuCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("		success: function(data) {\r\n");
      out.write("			// alert(JSON.stringify(data));\r\n");
      out.write("			$('#smallMenu').text(data.menuCategory);\r\n");
      out.write("			if(data.menuCategory == '차') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/drinkInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=차&menuCode=T&pg=1')\r\n");
      out.write("			} else if(data.menuCategory == '커피') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/drinkInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=커피&menuCode=C&pg=1')\r\n");
      out.write("			} else if(data.menuCategory == '케이크') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/foodInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=케이크&menuCode=K&pg=1')\r\n");
      out.write("			} else if(data.menuCategory == '브레드') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/foodInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=브레드&menuCode=B&pg=1')\r\n");
      out.write("			} else if(data.menuCategory == '샐러드') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/foodInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=샐러드&menuCode=D&pg=1')\r\n");
      out.write("			} else if(data.menuCategory == '샌드위치') {\r\n");
      out.write("				$('#category').attr('href', '/milkyWayForest/menuInfo/foodInfo');\r\n");
      out.write("				$('#smallMenu').attr('href', '/milkyWayForest/menuInfo/menuInfo?category=샌드위치&menuCode=S&pg=1')\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$('#menuImgDiv #bigImg').attr('src', data.menuImg);\r\n");
      out.write("			$('#menuName').text(data.menuName);\r\n");
      out.write("			$('<p>',{\r\n");
      out.write("				text: data.menuEngName,\r\n");
      out.write("				id: 'menuEngName'\r\n");
      out.write("			}).appendTo($('#menuName'))\r\n");
      out.write("			$('#menuDetail').html(data.menuDetail);\r\n");
      out.write("			$('#menuKcal2').text(data.menuKcal);\r\n");
      out.write("			$('#menuSugar2').text(data.menuSugar);\r\n");
      out.write("			$('#menuFat2').text(data.menuFat);\r\n");
      out.write("			$('#menuProtein2').text(data.menuProtein);\r\n");
      out.write("			$('#menuSodium2').text(data.menuSodium);\r\n");
      out.write("			if(data.menuFactor != null) {\r\n");
      out.write("				$('#menuFactor').text(data.menuFactor);\r\n");
      out.write("			} else {\r\n");
      out.write("				$('#menuFactor').css('visibility', 'hidden');\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if(data.menuCaffeine != 0) {\r\n");
      out.write("				$('<div>',{\r\n");
      out.write("					text: '카페인 (mg)'\r\n");
      out.write("				}).append($('<span>',{\r\n");
      out.write("					text: data.menuCaffeine\r\n");
      out.write("				})).appendTo($('#menuRightInfo'));\r\n");
      out.write("			}\r\n");
      out.write("			$('.imgList .on img').attr('src', data.menuImg);\r\n");
      out.write("			$('.imgList .on img').css('border', '1px solid  #154520');\r\n");
      out.write("			\r\n");
      out.write("			/* \r\n");
      out.write("			$('#productKorName').text(data.menuName);\r\n");
      out.write("			$('#productEngName').text(data.menuEngName);\r\n");
      out.write("			$('#productDetail').html(data.menuDetail);\r\n");
      out.write("			$('.menuDetailImg #bigImg').attr('src', data.menuImg);\r\n");
      out.write("			$('.imgList .on img').attr('src', data.menuImg);\r\n");
      out.write("			$('.imgList .on img').css('border', '1px solid  #154520');\r\n");
      out.write("			*/\r\n");
      out.write("		},\r\n");
      out.write("		error: function(err) {\r\n");
      out.write("			console.log(err);\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
