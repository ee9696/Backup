/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-16 01:59:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1639138034579L));
    _jspx_dependants.put("jar:file:/D:/Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/milkyWayForest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/milkyWayForest/bootstrap/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/milkyWayForest/css/payment.css\">\r\n");
      out.write("<form id=\"paymentForm\">\r\n");
      out.write("	<legend>주문/결제</legend>\r\n");
      out.write("	<br>\r\n");
      out.write("	<div id=\"paymentContainer\">\r\n");
      out.write("		<div id=\"paymentProductDiv\" class=\"item\"><!-- 구매상품정보 -->\r\n");
      out.write("			<table id=\"paymentProductTable\" class=\"table\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th colspan=\"2\">상품정보</th>\r\n");
      out.write("					<th>옵션</th>\r\n");
      out.write("					<th>상품금액</th>\r\n");
      out.write("					<th>수량</th>\r\n");
      out.write("					<th>총금액</th>\r\n");
      out.write("					<th>예상적립금</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table> <!-- paymentProductTable -->\r\n");
      out.write("			<input type=\"hidden\" id=\"newSavedMoney\" name=\"newSavedMoney\">\r\n");
      out.write("		</div> <!-- paymentProductDiv -->\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"paymentOrderer\" class=\"item\">\r\n");
      out.write("			<p>주문자정보</p>\r\n");
      out.write("			<table id=\"ordererTable\" class=\"table\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th width=\"200\">이름</th>\r\n");
      out.write("					<td><input type=\"text\" id=\"name\" name=\"name\">\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이메일</th>\r\n");
      out.write("					<td><input type=\"text\" id=\"email1\" name=\"email1\"> @ \r\n");
      out.write("						<input type=\"text\" id=\"email2\" name=\"email2\">\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>연락처</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select id=\"tel1\" name=\"tel1\">\r\n");
      out.write("							<option value=\"010\">010</option>\r\n");
      out.write("							<option value=\"011\">011</option>\r\n");
      out.write("							<option value=\"016\">016</option>\r\n");
      out.write("							<option value=\"017\">017</option>\r\n");
      out.write("							<option value=\"018\">018</option>\r\n");
      out.write("							<option value=\"019\">019</option>\r\n");
      out.write("						</select> - \r\n");
      out.write("						<input type=\"text\" id=\"tel2\" name=\"tel2\"> - \r\n");
      out.write("						<input type=\"text\" id=\"tel3\" name=\"tel3\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th colspan=\"2\">입력된 정보가 정확한 정보인지 확인해 주세요.</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div> <!-- paymentOrderer -->\r\n");
      out.write("		<div id=\"paymentShip\" class=\"item\">\r\n");
      out.write("			<p>배송지정보</p>\r\n");
      out.write("			<table id=\"paymentShipTable\" class=\"table\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<select id=\"shipSelect\">\r\n");
      out.write("							<option style=\"text-align:center;\"> ---------- 배송지를 선택해주세요 ---------- </option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th width=\"200\">배송지명</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" id=\"payShipNickname\" name=\"payShipNickname\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>수령인</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" id=\"payShipReceiver\" name=\"payShipReceiver\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>수령인 번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select id=\"payShipTel1\" name=\"payShipTel1\">\r\n");
      out.write("							<option value=\"010\">010</option>\r\n");
      out.write("							<option value=\"011\">011</option>\r\n");
      out.write("							<option value=\"016\">016</option>\r\n");
      out.write("							<option value=\"017\">017</option>\r\n");
      out.write("							<option value=\"018\">018</option>\r\n");
      out.write("							<option value=\"019\">019</option>\r\n");
      out.write("						</select> - \r\n");
      out.write("						<input type=\"text\" id=\"payShipTel2\" name=\"payShipTel2\"> - \r\n");
      out.write("						<input type=\"text\" id=\"payShipTel3\" name=\"payShipTel3\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>수령지 주소</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" id=\"payShipZipcode\" name=\"payShipZipcode\" readonly>\r\n");
      out.write("						<input type=\"button\" class=\"btn\" id=\"payShipZipcodeBtn\" value=\"우편번호 검색\" onclick=\"sample6_execDaumPostcode()\" ><br>\r\n");
      out.write("						<input type=\"text\" id=\"payShipAddr1\" name=\"payShipAddr1\" readonly><br>\r\n");
      out.write("						<input type=\"text\" id=\"payShipAddr2\" name=\"payShipAddr2\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>배송 메모</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<textarea id=\"shipMemo\" name=\"shipMemo\"></textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div> <!-- paymentShip -->\r\n");
      out.write("		<div id=\"paymentSaleSelect\" class=\"item\">\r\n");
      out.write("			<p>적립금/쿠폰</p>\r\n");
      out.write("			<table id=\"paymentSaleSelectTable\" class=\"table\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th width=\"200\">적립금</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" id=\"paymentSavedMoney\" name=\"paymentSavedMoney\" value=\"0\">\r\n");
      out.write("						<div id=\"haveSavedMoneyDiv\"> 보유 적립금 : \r\n");
      out.write("							<span id=\"haveSavedMoney\"></span> 원\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>할인쿠폰</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select id=\"paymentCoupon\" name=\"paymentCoupon\">\r\n");
      out.write("							<option style=\"text-align: center;\"> ---------- 쿠폰을 선택해주세요 ---------- </option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<div id=\"haveCouponDiv\"> 보유 쿠폰수 : \r\n");
      out.write("							<span id=\"haveCoupon\"></span> 장\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div> <!-- paymentSaleSelect -->\r\n");
      out.write("		<div id=\"paymentMethod\" class=\"item\">\r\n");
      out.write("			<p>결제정보</p>\r\n");
      out.write("			<ul class=\"table\">\r\n");
      out.write("				<li>\r\n");
      out.write("					<input type=\"radio\" id=\"paymentMethodCheck1\" name=\"paymentMethod\" value=\"무통장입금\">\r\n");
      out.write("					<label for=\"paymentMethodCheck1\">무통장입금</label>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<input type=\"radio\" id=\"paymentMethodCheck2\" name=\"paymentMethod\" value=\"신용카드\">\r\n");
      out.write("					<label for=\"paymentMethodCheck2\">신용카드</label>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<input type=\"radio\" id=\"paymentMethodCheck3\" name=\"paymentMethod\" value=\"실시간 계좌이체\">\r\n");
      out.write("					<label for=\"paymentMethodCheck3\">실시간 계좌이체</label>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<input type=\"radio\" id=\"paymentMethodCheck4\" name=\"paymentMethod\" value=\"카카오페이\" checked>\r\n");
      out.write("					<label for=\"paymentMethodCheck4\">카카오페이</label>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div> <!-- paymentMethod -->\r\n");
      out.write("		<div id=\"paymentStickDiv\" class=\"item\">\r\n");
      out.write("			<div id=\"paymentTotal\">\r\n");
      out.write("				총 상품금액<span id=\"totalProductPrice\"></span><br>\r\n");
      out.write("				총 할인금액<span id=\"totalSalePrice\"></span><br>\r\n");
      out.write("				배송비<span id=\"shipPay\"></span>\r\n");
      out.write("					<input type=\"hidden\" id=\"shipPay1\" name=\"shipPay\"><br>\r\n");
      out.write("				<p>총 결제금액<span id=\"totalPayPrice\"></span></p>\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"button\" id=\"paymentOrderBtn\" class=\"btn\" value=\"주문하기\">\r\n");
      out.write("				<input type=\"button\" id=\"paymentCancelBtn\" class=\"btn\" value=\"취소\">\r\n");
      out.write("				<div id=\"paymentDiv\"></div> <!-- 유효성검사 -->\r\n");
      out.write("			</div> <!-- paymentTotal -->\r\n");
      out.write("		</div> <!-- paymentStickyDiv -->\r\n");
      out.write("\r\n");
      out.write("	</div> <!-- paymentContainer -->\r\n");
      out.write("	\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form id=\"cartCodeForm\">\r\n");
      out.write("	");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var amount = 0;\r\n");
      out.write("\r\n");
      out.write("$('#paymentForm #paymentOrderBtn').click(function(){\r\n");
      out.write("	$('#paymentDiv').empty();\r\n");
      out.write("	if(!$('#name').val() || !$('#email1').val() || !$('#email2').val() || !$('#tel1').val() || !$('#tel2').val() || !$('#tel3').val()) {\r\n");
      out.write("		$('#paymentDiv').text('주문자 정보를 입력해주세요.');\r\n");
      out.write("	} else if(!$('#payShipNickname').val() || !$('#payShipReceiver').val() || !$('#payShipTel1').val() || !$('#payShipTel2').val() || !$('#payShipTel3').val() || !$('#payShipZipcode').val() || !$('#payShipAddr1').val() || !$('#payShipAddr2').val()) {\r\n");
      out.write("		$('#paymentDiv').text('배송지 정보를 입력해주세요.');\r\n");
      out.write("	} else {\r\n");
      out.write("		var paymentCode;\r\n");
      out.write("		\r\n");
      out.write("		var totalPayPrice = $('#paymentForm #totalPayPrice').val();\r\n");
      out.write("		var email = $('#paymentForm #email1').val()+'@'+$('#paymentForm #email2').val();\r\n");
      out.write("		var name = $('#paymentForm #name').val();\r\n");
      out.write("		var tel = $('#paymentForm #tel1').val()+'-'+$('#paymentForm #tel2').val()+'-'+$('#paymentForm #tel3').val();\r\n");
      out.write("		var addr = $('#paymentForm #payShipAddr1').val()+' '+$('#paymentForm #payShipAddr2').val();\r\n");
      out.write("		var postcode = $('#paymentForm #payShipZipcode').val();\r\n");
      out.write("		\r\n");
      out.write("		//카카오페이 https://wogus789789.tistory.com/m/178 https://wondongho.tistory.com/189\r\n");
      out.write("		if($('input:radio').eq(3).is(':checked')){\r\n");
      out.write("		    var IMP = window.IMP; // 생략가능\r\n");
      out.write("		    IMP.init('imp48332369'); //가맹점 식별코드\r\n");
      out.write("		    var msg;\r\n");
      out.write("		    \r\n");
      out.write("		    IMP.request_pay({\r\n");
      out.write("		        pg : 'kakaopay',\r\n");
      out.write("		        pay_method : 'card',\r\n");
      out.write("		        merchant_uid : 'merchant_' + new Date().getTime(),\r\n");
      out.write("		        name : '은하숲 상품 결제', //결제창에서 보여질 이름\r\n");
      out.write("		        amount : amount, //실제 결제되는 가격\r\n");
      out.write("		        buyer_email : email,\r\n");
      out.write("		        buyer_name : name,\r\n");
      out.write("	        	buyer_tel : tel,\r\n");
      out.write("	            buyer_addr : addr,\r\n");
      out.write("		        buyer_postcode : postcode\r\n");
      out.write("		    }, function(rsp) {\r\n");
      out.write("				console.log(rsp);\r\n");
      out.write("		        \r\n");
      out.write("		        if ( rsp.success ) { //결제 성공시\r\n");
      out.write("		        	//DB\r\n");
      out.write("		        	$.ajax({\r\n");
      out.write("						url: '/milkyWayForest/payment/payment',\r\n");
      out.write("						type: 'post',\r\n");
      out.write("						data: $('#paymentForm').serialize(),\r\n");
      out.write("						success: function(data) {\r\n");
      out.write("							//alert(data);\r\n");
      out.write("							paymentCode = data;\r\n");
      out.write("							\r\n");
      out.write("							msg = '결제가 완료되었습니다.';\r\n");
      out.write("			                msg += '\\n고유ID : ' + rsp.imp_uid;\r\n");
      out.write("			                msg += '\\n상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("			                msg += '\\n결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("			                msg += '\\n카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\r\n");
      out.write("			                //alert(msg);\r\n");
      out.write("			    	        location.href=\"/milkyWayForest/payment/paySuccess?paymentCode=\"+paymentCode;\r\n");
      out.write("			\r\n");
      out.write("						},\r\n");
      out.write("						error: function(err) {\r\n");
      out.write("							console.log(err);\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("		        } else { //결제 실패시\r\n");
      out.write("		            msg = '결제에 실패하였습니다.';\r\n");
      out.write("		            msg += '\\n에러내용 : ' + rsp.error_msg;\r\n");
      out.write("		            \r\n");
      out.write("		            alert(msg);\r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("		    });\r\n");
      out.write("		}//카카오페이\r\n");
      out.write("		else if($('input:radio').eq(1).is(':checked')){\r\n");
      out.write("			var IMP = window.IMP; // 생략가능\r\n");
      out.write("		    IMP.init('imp48332369'); //가맹점 식별코드\r\n");
      out.write("		    var msg;\r\n");
      out.write("		    \r\n");
      out.write("		    IMP.request_pay({\r\n");
      out.write("		        pg : 'html5_inicis',\r\n");
      out.write("		        pay_method : 'card',\r\n");
      out.write("		        merchant_uid : 'merchant_' + new Date().getTime(),\r\n");
      out.write("		        name : '은하숲 상품 결제', //결제창에서 보여질 이름\r\n");
      out.write("		        amount : amount, //실제 결제되는 가격\r\n");
      out.write("		        buyer_email : email,\r\n");
      out.write("		        buyer_name : name,\r\n");
      out.write("	        	buyer_tel : tel,\r\n");
      out.write("	            buyer_addr : addr,\r\n");
      out.write("		        buyer_postcode : postcode\r\n");
      out.write("		    }, function(rsp) {\r\n");
      out.write("				console.log(rsp);\r\n");
      out.write("		        \r\n");
      out.write("		        if ( rsp.success ) { //결제 성공시\r\n");
      out.write("		        	//DB\r\n");
      out.write("		        	$.ajax({\r\n");
      out.write("						url: '/milkyWayForest/payment/payment',\r\n");
      out.write("						type: 'post',\r\n");
      out.write("						data: $('#paymentForm').serialize(),\r\n");
      out.write("						success: function(data) {\r\n");
      out.write("							//alert(data);\r\n");
      out.write("							paymentCode = data;\r\n");
      out.write("							\r\n");
      out.write("							msg = '결제가 완료되었습니다.';\r\n");
      out.write("			                msg += '\\n고유ID : ' + rsp.imp_uid;\r\n");
      out.write("			                msg += '\\n상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("			                msg += '\\n결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("			                msg += '\\n카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\r\n");
      out.write("			                //alert(msg);\r\n");
      out.write("			    	        location.href=\"/milkyWayForest/payment/paySuccess?paymentCode=\"+paymentCode;\r\n");
      out.write("			\r\n");
      out.write("						},\r\n");
      out.write("						error: function(err) {\r\n");
      out.write("							console.log(err);\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("		        } else { //결제 실패시\r\n");
      out.write("		            msg = '결제에 실패하였습니다.';\r\n");
      out.write("		            msg += '\\n에러내용 : ' + rsp.error_msg;\r\n");
      out.write("		            \r\n");
      out.write("		            alert(msg);\r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("		    });\r\n");
      out.write("		}//카드결제\r\n");
      out.write("		else { // 나머지 결제수단\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '/milkyWayForest/payment/payment',\r\n");
      out.write("				type: 'post',\r\n");
      out.write("				data: $('#paymentForm').serialize(),\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					//alert(data);\r\n");
      out.write("					paymentCode = data;\r\n");
      out.write("					\r\n");
      out.write("					location.href=\"/milkyWayForest/payment/paySuccess?paymentCode=\"+paymentCode;\r\n");
      out.write("\r\n");
      out.write("				},\r\n");
      out.write("				error: function(err) {\r\n");
      out.write("					console.log(err);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	$('#paymentCancelBtn').click(function(){\r\n");
      out.write("		history.back();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: '/milkyWayForest/payment/getPayment',\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		data: $('#cartCodeForm').serialize(),\r\n");
      out.write("		success: function(data) {\r\n");
      out.write("			//alert(JSON.stringify(data));\r\n");
      out.write("			\r\n");
      out.write("			var totalPrice = 0;\r\n");
      out.write("			var totalSalePrice = 0;\r\n");
      out.write("			var allPrice = 0;\r\n");
      out.write("			var savedMoney = 0;\r\n");
      out.write("			var memberGrade;\r\n");
      out.write("			\r\n");
      out.write("			// 주문자정보\r\n");
      out.write("			$.each(data.memberList, function(index, items) {\r\n");
      out.write("				$('#name').val(items.name);\r\n");
      out.write("				$('#email1').val(items.email1);\r\n");
      out.write("				$('#email2').val(items.email2);\r\n");
      out.write("				$('#tel1').val(items.tel1);\r\n");
      out.write("				$('#tel2').val(items.tel2);\r\n");
      out.write("				$('#tel3').val(items.tel3);\r\n");
      out.write("				$('#haveSavedMoney').text(items.savedMoney.toLocaleString());\r\n");
      out.write("				memberGrade = items.memberGrade;\r\n");
      out.write("				if(items.coupon != null) {\r\n");
      out.write("					$('<option>',{\r\n");
      out.write("						text: items.couponName,\r\n");
      out.write("						value: items.couponName\r\n");
      out.write("					}).appendTo($('#paymentCoupon'));\r\n");
      out.write("				} else {\r\n");
      out.write("					$('#haveCoupon').text('0');\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$('#paymentSavedMoney').change(function(){\r\n");
      out.write("					if($('#paymentSavedMoney').val() > items.savedMoney) {\r\n");
      out.write("						$('#paymentSavedMoney').val(items.savedMoney);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			// 구매상품정보\r\n");
      out.write("			$.each(data.cartList, function(index, items) {\r\n");
      out.write("				var totalProductPrice = items.productUnit*items.cartQty*(1-items.productRate/100);\r\n");
      out.write("				totalPrice += items.productUnit*items.cartQty;\r\n");
      out.write("				totalSalePrice += items.productUnit*items.cartQty*items.productRate;\r\n");
      out.write("				allPrice += totalProductPrice;\r\n");
      out.write("				\r\n");
      out.write("				//alert(items.cartCode)\r\n");
      out.write("				\r\n");
      out.write("				$('<tr>').append($('<td>',{\r\n");
      out.write("					style: 'width: 70px; padding: 0 40px;'\r\n");
      out.write("				}).append($('<img>',{\r\n");
      out.write("					src: '/milkyWayForest/productImage/'+items.productImageName,\r\n");
      out.write("					style: 'height: 70px; margin: 0;'\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: items.productName\r\n");
      out.write("				}).append($('<input>',{\r\n");
      out.write("					type: 'hidden',\r\n");
      out.write("					name: 'productCode',\r\n");
      out.write("					value: items.productCode\r\n");
      out.write("				})).append($('<input>',{\r\n");
      out.write("					type: 'hidden',\r\n");
      out.write("					name: 'cartCode',\r\n");
      out.write("					value: items.cartCode\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: items.cartOption,\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				}).append($('<input>',{\r\n");
      out.write("					type: 'hidden',\r\n");
      out.write("					name: 'productOption',\r\n");
      out.write("					value: items.cartOption\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: items.productUnit.toLocaleString()+'원',\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				}).append($('<input>',{\r\n");
      out.write("					type: 'hidden',\r\n");
      out.write("					name: 'payPrice',\r\n");
      out.write("					value: items.productUnit\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: items.cartQty+'개',\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				}).append($('<input>',{\r\n");
      out.write("					type: 'hidden',\r\n");
      out.write("					name: 'payQty',\r\n");
      out.write("					value: items.cartQty\r\n");
      out.write("				})).append($('<input>',{\r\n");
      out.write("					type:'hidden',\r\n");
      out.write("					name: 'payRate',\r\n");
      out.write("					value: items.productRate\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: totalProductPrice.toLocaleString()+'원',\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				})).append($('<td>',{\r\n");
      out.write("					id: 'productSavedMoney'+index,\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				})).appendTo($('#paymentProductTable'));\r\n");
      out.write("				\r\n");
      out.write("				if(memberGrade == 'welcome') {\r\n");
      out.write("					savedMoney += totalProductPrice*0.01;\r\n");
      out.write("					$('#productSavedMoney'+index).text((totalProductPrice*0.01).toLocaleString() + '원 ');\r\n");
      out.write("				} else if(memberGrade == 'green') {\r\n");
      out.write("					savedMoney += totalProductPrice*0.03;\r\n");
      out.write("					$('#productSavedMoney'+index).text((totalProductPrice*0.03).toLocaleString() + '원 ');\r\n");
      out.write("				} else {\r\n");
      out.write("					savedMoney += totalProductPrice*0.05;\r\n");
      out.write("					$('#productSavedMoney'+index).text((totalProductPrice*0.05).toLocaleString() + '원 ');\r\n");
      out.write("				}\r\n");
      out.write("					\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			var shipPay = 0;\r\n");
      out.write("			\r\n");
      out.write("			$('#totalProductPrice').text(totalPrice.toLocaleString()+'원');\r\n");
      out.write("			$('#totalSalePrice').text(totalSalePrice.toLocaleString()+'원');\r\n");
      out.write("			if((totalPrice-totalSalePrice) >= 50000) {\r\n");
      out.write("				$('#shipPay').text('0원');\r\n");
      out.write("			} else {\r\n");
      out.write("				$('#shipPay').text('2,500원')\r\n");
      out.write("				shipPay += 2500;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			allPrice += shipPay;\r\n");
      out.write("			amount = allPrice;\r\n");
      out.write("			\r\n");
      out.write("			$('#shipPay1').val(shipPay);\r\n");
      out.write("			$('#newSavedMoney').val(savedMoney);\r\n");
      out.write("			$('#totalPayPrice').text(allPrice.toLocaleString()+'원');\r\n");
      out.write("			\r\n");
      out.write("			// 배송지정보\r\n");
      out.write("			$.each(data.shipList, function(index, items) {\r\n");
      out.write("				$('<option>',{\r\n");
      out.write("					text: items.shipNickname,\r\n");
      out.write("				}).appendTo($('#shipSelect'));\r\n");
      out.write("				\r\n");
      out.write("				$('#shipSelect').change(function(){\r\n");
      out.write("					if($('#shipSelect option:eq('+(index+1)+')').prop('selected')) {\r\n");
      out.write("						$('#payShipNickname').val(items.shipNickname);\r\n");
      out.write("						$('#payShipReceiver').val(items.shipReceiver);\r\n");
      out.write("						$('#payShipTel1').val(items.shipTel1);\r\n");
      out.write("						$('#payShipTel2').val(items.shipTel2);\r\n");
      out.write("						$('#payShipTel3').val(items.shipTel3);\r\n");
      out.write("						$('#payShipZipcode').val(items.shipZipcode);\r\n");
      out.write("						$('#payShipAddr1').val(items.shipAddr1);\r\n");
      out.write("						$('#payShipAddr2').val(items.shipAddr2);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			})\r\n");
      out.write("		},\r\n");
      out.write("		error: function(err) {\r\n");
      out.write("			console.log(err);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function sample6_execDaumPostcode() {\r\n");
      out.write("    new daum.Postcode({\r\n");
      out.write("        oncomplete: function(data) {\r\n");
      out.write("            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("            // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("            var addr = ''; // 주소 변수\r\n");
      out.write("            var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("                addr = data.roadAddress;\r\n");
      out.write("            } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("                addr = data.jibunAddress;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("           /*  // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("            if(data.userSelectedType === 'R'){\r\n");
      out.write("                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                    extraAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                if(extraAddr !== ''){\r\n");
      out.write("                    extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("                }\r\n");
      out.write("                // 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("                document.getElementById(\"sample6_extraAddress\").value = extraAddr;\r\n");
      out.write("            \r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"sample6_extraAddress\").value = '';\r\n");
      out.write("            } */\r\n");
      out.write("\r\n");
      out.write("            // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("            document.getElementById('payShipZipcode').value = data.zonecode;\r\n");
      out.write("            document.getElementById(\"payShipAddr1\").value = addr;\r\n");
      out.write("            // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("            document.getElementById(\"payShipAddr2\").focus();\r\n");
      out.write("        }\r\n");
      out.write("    }).open();\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /payment/payment.jsp(175,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("code");
      // /payment/payment.jsp(175,1) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/payment/payment.jsp(175,1) '${cartCode }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${cartCode }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		<input type=\"hidden\" name=\"cartCode\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
