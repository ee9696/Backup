/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-15 06:59:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypageWishList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/milkyWayForest/css/mypage.css\">\r\n");
      out.write("\r\n");
      out.write("<form id=\"mypageMain\">\r\n");
      out.write("<div id=\"h1Div\"><h1 style=\"font-size: 35px;\">마이페이지</h1></div>\r\n");
      out.write("<div id=\"main-wrapper\">\r\n");
      out.write("	<div id=\"main-sideNav\" class=\"item\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "mypageSideNav.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"main-topNav\" class=\"item\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "mypageTopNav.jsp", out, false);
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"myWishList-wrapper\" class=\"item\">\r\n");
      out.write("		<div id=\"myWishList-title\" class=\"navbar navbar-light\">\r\n");
      out.write("			<span class=\"mb-0\">찜한 상품</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"myWishList-state\">\r\n");
      out.write("			<input type=\"button\" id=\"wishSelectDelete\" class=\"btn\" value=\"선택삭제\">\r\n");
      out.write("			<input type=\"button\" id=\"wishAllDelete\" class=\"btn\" value=\"전체삭제\">\r\n");
      out.write("			<table id=\"myWishListTable\" class=\"table border-bottom\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr align=\"center\">\r\n");
      out.write("						<th scope=\"col\" width=\"50\">\r\n");
      out.write("							<input type=\"checkbox\" id=\"allCheck\">\r\n");
      out.write("						</th>\r\n");
      out.write("						<th colspan=\"2\" scope=\"col\">상품이름</th>\r\n");
      out.write("						<th scope=\"col\" width=\"120\">옵션</th>\r\n");
      out.write("						<th scope=\"col\" width=\"150\">찜한 날짜</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			<div id=\"boardPagingDiv\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div><!-- 나의 주문처리 현황 -->\r\n");
      out.write("\r\n");
      out.write("</div><!-- main-wrapper -->\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: '/milkyWayForest/mypage/getWishList?pg=1',\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		success: function(data) {\r\n");
      out.write("			//alert(JSON.stringify(data));\r\n");
      out.write("			$.each(data.list, function(index, items){\r\n");
      out.write("				$('<tr>').append($('<td>',{\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				}).append($('<input>',{\r\n");
      out.write("					type: 'checkbox',\r\n");
      out.write("					class: 'wishCheck',\r\n");
      out.write("					value: items.wishListCode,\r\n");
      out.write("					name: 'wishListCode'\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					style: 'width: 80px; height: 80px;'\r\n");
      out.write("				}).append($('<img>',{\r\n");
      out.write("					src: '/milkyWayForest/productImage/'+items.productImageName,\r\n");
      out.write("					style: 'width: 100%; height: 100%; marging: 3px 40px'\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("				}).append($('<a>',{\r\n");
      out.write("					href: '/milkyWayForest/shopping/shoppingDetail?productCode='+items.productCode,\r\n");
      out.write("					text: items.productName,\r\n");
      out.write("					class: 'productName'\r\n");
      out.write("				}))).append($('<td>',{\r\n");
      out.write("					text: items.productOption,\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				})).append($('<td>',{\r\n");
      out.write("					text: items.wishDate,\r\n");
      out.write("					align: 'center'\r\n");
      out.write("				})).appendTo($('#myWishListTable tbody'));\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			$('#boardPagingDiv').html(data.boardPaging);\r\n");
      out.write("		},\r\n");
      out.write("		error: function(err) {\r\n");
      out.write("			console.log(err);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$('#allCheck').click(function(){\r\n");
      out.write("		if($('#allCheck').is(':checked')) {\r\n");
      out.write("			$('.wishCheck').prop('checked', true);\r\n");
      out.write("		} else {\r\n");
      out.write("			$('.wishCheck').prop('checked', false);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(document).on('click', '.wishCheck', function(){\r\n");
      out.write("		if($('.wishCheck:checked').length < $('.wishCheck').length)\r\n");
      out.write("			$('#allCheck').prop('checked', false);\r\n");
      out.write("		else $('#allCheck').prop('checked', true);\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$('#wishSelectDelete').click(function(){\r\n");
      out.write("		if($('.wishCheck:checked').length == 0) {\r\n");
      out.write("			alert('선택된 상품이 없습니다.');\r\n");
      out.write("		} else {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '/milkyWayForest/mypage/wishSelectDelete',\r\n");
      out.write("				type: 'post',\r\n");
      out.write("				data: $('#mypageMain').serialize(),\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					alert('삭제되었습니다.');\r\n");
      out.write("					$('.wishCheck:checked').parents('tr').empty();\r\n");
      out.write("				},\r\n");
      out.write("				error: function(err) {\r\n");
      out.write("					console.log(err);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$('#wishAllDelete').click(function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: '/milkyWayForest/mypage/wishAllDelete',\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			success: function(data) {\r\n");
      out.write("				alert('삭제되었습니다.');\r\n");
      out.write("				$('#myWishListTable tbody').empty();\r\n");
      out.write("			},\r\n");
      out.write("			error: function(err) {\r\n");
      out.write("				console.log(err);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
