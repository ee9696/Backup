<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="adminSQL">
	
	<insert id="pProductInsert" parameterType="product">
		begin
		insert into milkyproductinfo values(#{productCode}, #{productName}, #{category}, #{productOption}, #{productUnit}, #{productRate}, 0);
		insert into milkyproductdetail values(#{productCode}, #{productEngName}, #{productSmallInfo}, #{productDetailInfo});
		insert into milkystock values(#{productCode}, 0, 0);
		end;
	</insert>
	
	<select id="getProductList" resultType="product">
		select productCode, productName, productEngName, category, productOption, productUnit,
				productRate, wishCount 
		from milkyproductinfo 
		join milkyproductdetail using(productcode)
		order by productCode
	</select>
	
	<update id="productUpdate" parameterType="product">
		begin
		update milkyproductinfo set productname=#{productName}, productOption=#{productOption},
				productUnit=#{productUnit}, productRate=#{productRate} where productCode=#{productCode};
		update milkyproductdetail set productEngName=#{productEngName} where productCode=#{productCode};
		end;
	</update>
	
	<delete id="productDelete">
		begin
		delete milkystock where productcode=#{productCode};
		delete milkyproductdetail where productcode=#{productCode};
		delete milkyproductinfo where productCode=#{productCode};
		end;
	</delete>
	
	<select id="getStock" resultType="product">
		select productCode, productName, entercount, sellcount from milkystock join milkyproductinfo using(productcode) order by productCode
	</select>
	
	<update id="stockUpdate" parameterType="java.util.Map">
		update milkystock product set entercount=#{enterCount} where productCode=#{productCode}
	</update>
	
	<select id="getGradeBenefit" resultType="grade">
		select * from milkygradeinfo
	</select>
	
	<update id="updateGradeBenefit" parameterType="java.util.Map">
		begin
		update milkygradeinfo set gradeBenefit=#{welcome} where gradeName='welcome';
		update milkygradeinfo set gradeBenefit=#{green} where gradeName='green';
		update milkygradeinfo set gradeBenefit=#{gold} where gradeName='gold';
		end;
	</update>
	
	<select id="getQnaBoard" parameterType="java.util.Map" resultType="qnaBoard">
		select * from (select rownum rn, a.* from 
		(select qnacode, qnaquestiontype, qnasubject, id, qnacontent, qnapwd, qnahit, 
		qnaimage1, qnaimage2, qnaanswercheck, to_char(qnadate, 'yyyy-mm-dd') "qnaDate" 
		 from milkyqna order by qnaCode desc) a)
		  where rn between #{startNum} and #{endNum} 
	</select>
	
	<select id="getTotalA" resultType="int">
		select count(*) from milkyqna
	</select>
	
	<select id="getTotalMemA" resultType="int">
		select count(*) from milkyMember
	</select>
	
	<select id="getMemberList" parameterType="java.util.Map" resultType="member">
		select * from (select rownum rn, a.* from (select id, name, nickname, pwd, gender, yy, mm, dd, tel1, tel2, tel3, email1, email2, to_char(writedate,'yyyy-mm-dd') "writeDate",
		membergrade, savedmoney, writepath, to_char(loginTime,'yyyy-mm-dd') "loginTime", "couponName" from milkymember 
		join (select id, count(couponname) "couponName" from milkymemberbenefit group by id) using(id)) a) where rn between #{startNum} and #{endNum}
	</select>
	
	<insert id="qnaCommentInsert" parameterType="comment">
		begin
		insert into milkycomment(commentcode, qnaCode, id, commentContent) values(milkyCommentSeq.nextval, #{qnaCode}, #{id}, #{commentContent});
		update milkyqna set qnaAnswerCheck='답변 완료' where qnaCode=#{qnaCode};
		end;
	</insert>
	
	<select id="getQnaCommentContent" parameterType="int" resultType="comment">
		select * from milkycomment where qnacode=#{qnaCode} order by commentCode desc
	</select>
	
	<select id="getDailyOrder" resultType="payment">
		select paymentCode, productcode, productname, payqty, id, deliveryinfo, paydate from milkypayment 
		join milkypaymentoption using(paymentCode)
		join milkyProductInfo using(productcode)
		order by paydate desc, deliveryinfo
	</select>
	
	<select id="getOrderNShip" resultType="payment">
		select paymentcode, productname, payqty, deliveryinfo from milkypayment
		join milkypaymentoption using(paymentcode)
		join milkyProductInfo using(productcode)
		where deliveryinfo like'결제%' or deliveryinfo like '배송%'
		order by paydate desc, deliveryInfo
	</select>
	
	<select id="getOrderCancel" resultType="payment">
		select paymentcode, productname, payqty, deliveryinfo from milkypayment
		join milkypaymentOption using(paymentcode)
		join milkyProductInfo using(productCode)
		where deliveryinfo like '취소%' or deliveryinfo like '교환%' or deliveryinfo like '반품%'
		order by paydate desc, deliveryInfo
	</select>
	
	<update id="shipBtn" parameterType="java.util.Map">
		update milkypayment set deliveryinfo=#{deliveryInfo} where paymentCode=#{paymentCode}
	</update>
	
	<select id="adminlogin"  parameterType="admin" resultType="String">
		select adminId,adminPwd from milkyAdmin where adminId=#{adminId} and adminPwd=#{adminPwd}
	</select>
	
	<select id="getReviewTotalA" resultType="int">
		select count(*) from milkyreview
	</select>
	
	<select id="getReview" parameterType="java.util.Map" resultType="review">
		select * from 
			(select rownum rn, a.*  
				from (select reviewcode, productcode, productname, reviewlike, id,
				reviewcontent, to_char(reviewdate, 'yyyy-mm-dd') "reviewDate"
			from milkyreview join milkyproductinfo using(productcode) order by reviewcode desc) a)
			where rn between #{startNum} and #{endNum}
	</select>
</mapper>