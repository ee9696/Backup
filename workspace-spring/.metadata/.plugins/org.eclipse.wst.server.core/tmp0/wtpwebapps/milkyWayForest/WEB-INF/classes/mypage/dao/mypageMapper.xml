<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypageSQL">
	<select id="getMypageMyInfo" parameterType="String" resultType="member">
		select * from milkymember where id=#{id}
	</select>
	
	<select id="mypagePwdCheck" parameterType="member" resultType="member">
		select * from milkymember where id=#{id}
	</select>
	
	<update id="mypageMyInfoUpdate" parameterType="member">
		update milkymember set nickname=#{nickname},
							   pwd=#{pwd}, 
							   tel1=#{tel1},
							   tel2=#{tel2},
							   tel3=#{tel3},
							   email1=#{email1},
							   email2=#{email2},
							   idPwdQuestion=#{idPwdQuestion},
							   idPwdAnswer=#{idPwdAnswer}
		where id=#{id}
	</update>
	
	<delete id="mypageMyInfoDelete" parameterType="String">
		delete milkymember where id=#{id}
	</delete>
	
	<select id="getQnaTotalA" parameterType="String" resultType="int">
		select count(*) from milkyqna where id=#{id}
	</select>
	
	<select id="getMyQnaList" parameterType="java.util.Map" resultType="qnaBoard">
		select * from (select rownum rn, a.* from 
		(select qnacode, qnaquestiontype, qnasubject, id, qnacontent, qnapwd, qnahit, 
		qnaimage1, qnaimage2, qnaanswercheck, to_char(qnadate, 'yyyy-mm-dd')
		 "qnadate" from milkyqna where id=#{id} order by qnaCode desc) a)
		  where rn between #{startNum} and #{endNum}
	</select>
	
	<select id="getMyQnaView" parameterType="String" resultType="qnaBoard">
		select qnaCode, qnaQuestionType, qnaSubject, id, qnaContent, qnaHit,
				to_char(qnaDate, 'yyyy-mm-dd') "qnaDate", qnAImage1, qnAImage2, qnaAnswerCheck
		from milkyQnA 
		where qnaCode=#{qnaCode} order by qnaCode desc
	</select>
	
	<update id="updateMyQnaView" parameterType="qnaBoard">
		update milkyqna set qnaQuestionType=#{qnaQuestionType},
							   qnaSubject=#{qnaSubject}, 
							   qnaContent=#{qnaContent}
		where qnaCode=#{qnaCode}
	</update>
	
	<select id="getMyQnaComment" parameterType="int" resultType="comment">
		select * from milkycomment where qnacode=#{qnaCode} order by commentCode desc
	</select>
	
	<delete id="deleteMyQnaView" parameterType="int">
		delete milkyqna where qnaCode=#{qnaCode}
	</delete>
	
	<insert id="mypageShpMngWrite" parameterType="shipment">
		insert into milkyShipment values(milkyShipmentSeq.nextval, #{id}, #{shipNickname}, #{shipReceiver}, #{shipTel1}, #{shipTel2}, #{shipTel3}, #{shipZipcode}, #{shipAddr1}, #{shipAddr2}, #{baseShip})
	</insert>
	
	<select id="getMainPaymentInfo" parameterType="String" resultType="payment">
		select paymentCode, id, paymentMethod, shipPay, deliveryInfo, payDate, 
		    paymentSavedMoney, newSavedMoney, paymentCoupon, shipMemo, 
		    productCode, b.productOption, b.payQty, b.payPrice, b.payRate,
		    c.productName, c.category
		from milkyPayment 
		join milkyPaymentOption b using(paymentCode)
		join milkyProductInfo c using(productCode)
		where substr(paymentcode, -4) in (select substr(paymentCode, -4) from 
		    (select rownum rn, paymentcode 
		    from (select paymentCode from milkypayment where id=#{id} order by paymentcode desc)) 
		    where rn between 1 and 3)
		order by paymentcode desc
	</select>
	
	<select id="getPaymentList" parameterType="String" resultType="payment">
		select paymentCode, id, paymentMethod, shipPay, deliveryInfo, payDate, 
		    paymentSavedMoney, newSavedMoney, paymentCoupon, shipMemo, 
		    productCode, b.productOption, b.payQty, b.payPrice, b.payRate,
		    c.productName, c.category
		from milkyPayment 
		join milkyPaymentOption b using(paymentCode)
		join milkyProductInfo c using(productCode)
		where id=#{id}
		order by paymentCode desc
	</select>
	
	<select id="countCoupon" parameterType="String" resultType="int">
		select count(*) from milkyMemberBenefit where id=#{id}
	</select>
	
	<select id="countPayment" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id}
	</select>
	
	<select id="countPending" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='입금대기중' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countFinished" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='결제완료' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countProcessing" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='배송준비중' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countShipping" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='배송중' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countShipped" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='배송완료' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countCancel" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='취소' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countExchange" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='교환' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countReturn" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='반품' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="countRefund" parameterType="String" resultType="int">
		select count(*) from milkyPayment 
		where id=#{id} and deliveryInfo='환불' and payDate 
		BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(TO_DATE(sysdate),'DD') 
		AND TRUNC(LAST_DAY(sysdate)) +0.99999421
	</select>
	
	<select id="getOrderTotalA" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id}
	</select>
	
	<select id="getPaymentList2" parameterType="java.util.Map" resultType="payment">
		select * from (select rownum rn, tt.* from
		    (select paymentCode, id, paymentMethod, shipPay, deliveryInfo, payDate, 
			    paymentSavedMoney, newSavedMoney, paymentCoupon, shipMemo, 
			    productCode, b.productOption, b.payQty, b.payPrice, b.payRate,
			    c.productName, c.category
			from milkyPayment 
			join milkyPaymentOption b using(paymentCode)
			join milkyProductInfo c using(productCode)
			where id=#{id}
			order by paymentCode desc) tt)
		where rn between #{startNum} and #{endNum} and id=#{id}
	</select>

	<select id="getMyOrderInfo" parameterType="String" resultType="payment">
		select paymentCode, paymentMethod, shipPay, deliveryInfo, payDate, paymentSavedMoney, newSavedMoney, paymentCoupon, shipMemo,
		    productCode, a.productOption, a.payQty, a.payPrice, a.payRate,
		    b.payShipNickname, b.payShipReceiver, b.payShipTel1, b.payShipTel2, b.payShipTel3, b.payShipZipcode, b.payShipAddr1, b.payShipAddr2,
		    c.productName, c.category,
		    d.productImageName
		from milkyPayment 
		join milkyPaymentOption a using(paymentCode)
		join milkyPaymentShip b using(paymentCode)
		join milkyProductInfo c using(productCode)
		join milkyProductImage d using(productCode)
		where paymentCode=#{paymentCode} and substr(productImagename,5,2) in('.j', '_1', '.p')
		order by productCode asc
	</select>
	
	<select id="getCancelTotalA" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id} and deliveryInfo in('취소', '교환', '반품', '환불')
	</select>
	
	<select id="getShipmentTotalA" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id} and deliveryInfo in('입금대기중', '결제완료', '배송준비중', '배송중', '배송완료')
	</select>
	
	<insert id="mypageShpMngWrite1" parameterType="shipment">
	BEGIN
		update milkyShipment set baseShip = 0 where id=#{id};
		insert into milkyShipment values(milkyShipmentSeq.nextval, #{id}, #{shipNickname}, #{shipReceiver}, #{shipTel1}, #{shipTel2}, #{shipTel3}, #{shipZipcode}, #{shipAddr1}, #{shipAddr2}, #{baseShip});
	END;
	</insert>
	
	<select id="getShpMngList" parameterType="String" resultType="shipment">
		select * from milkyShipment where id=#{id}
	</select>
	
	<select id="getShpMngModify" parameterType="String" resultType="shipment">
		select * from milkyShipment where shipCode=#{shipCode}
	</select>
	
	<update id="updateShpMng" parameterType="shipment">
		update milkyShipment set   shipNickname=#{shipNickname},
								   shipReceiver=#{shipReceiver}, 
								   shipTel1=#{shipTel1},
								   shipTel2=#{shipTel2},
								   shipTel3=#{shipTel3},
								   shipZipcode=#{shipZipcode},
								   shipAddr1=#{shipAddr1},
								   shipAddr2=#{shipAddr2},
								   baseShip=#{baseShip}
		where shipCode=#{shipCode}
	</update>
	
	<delete id="deleteShpMng" parameterType="String">
		delete milkyShipment where shipCode=#{shipCode}
	</delete>

	<update id="updateMyOrderCancel" parameterType="payment">
		begin
			insert into milkyOrderCancel values(#{paymentCode}, #{reason}, #{detailReason});
			update milkyPayment set deliveryInfo='취소' where paymentCode=#{paymentCode};
		end;
	</update>
	
	<update id="updateMyOrderExchange" parameterType="payment">
		begin
			insert into milkyOrderCancel values(#{paymentCode}, #{reason}, #{detailReason});
			update milkyPayment set deliveryInfo='교환' where paymentCode=#{paymentCode};
		end;
	</update>
	
	<update id="updateMyOrderReturn" parameterType="payment">
		begin
			insert into milkyOrderCancel values(#{paymentCode}, #{reason}, #{detailReason});
			update milkyPayment set deliveryInfo='반품' where paymentCode=#{paymentCode};
		end;
	</update>
	
	<select id="getMypageRating" parameterType="String" resultType="mypage.bean.MemberRatingDTO">
		select * 
		from milkymember e, milkygradeinfo d
		where id=#{id} and e.membergrade = d.gradename
	</select>

	<select id="getMemberdate" parameterType="member" resultType="member">
		select id, to_char(writeDate,'yyyy-mm-dd')writeDate from milkymember where id=#{id}
	</select>
	
	<select id="getPaymentSaveMoneyList" parameterType="java.util.Map" resultType="payment">
		select * from (select rownum rn, a.*from
		(select paymentcode, id, to_char(paydate,'yyyy-mm-dd') paydate,
		paymentsavedmoney, newsavedmoney from milkypayment where id=#{id} order by paydate desc) a)
		where rn between #{startNum} and #{endNum} and id=#{id}
	</select>
	
	<select id="getPointTotalA" parameterType="String" resultType="int">
		select count(*) from milkypayment where id=#{id}
	</select>
	
	<select id="getCouponList" parameterType="String" resultType="memberCoupon">
		select * from milkyMemberBenefit where id=#{id}
	</select>

	<select id="getMyOrderCancelInfo" parameterType="String" resultType="payment">
		select paymentCode, reason, detailReason, deliveryInfo
		from milkyOrderCancel
		join milkyPayment a using(paymentCode)
		where paymentCode=#{paymentCode}
	</select>
	
	<select id="getWishList" parameterType="java.util.Map" resultType="wishList">
		select * from 
			(select rownum rn, a.* from 
				(select wishlistcode, to_char(wishdate, 'yyyy-mm-dd') "wishDate", 
						productcode, productName, productOption, productImageName 
				from milkywishlist join milkyproductinfo using(productcode) 
									join milkyProductImage using(productcode) 
				where id=#{id} and substr(productImagename,5,2) in('.j', '_1', '.p')
					order by wishlistcode desc) a)
			where rn between #{startNum} and #{endNum}
	</select>

	<select id="getWishListTotalA" parameterType="String" resultType="int">
		select count(*) from milkywishlist where id=#{id}
	</select>
	
	<delete id="wishAllDelete" parameterType="String">
		delete milkywishlist where id=#{id}
	</delete>
	
	<delete id="wishSelectDelete" parameterType="String">
		delete milkywishlist where wishlistcode=#{wishListCode}
	</delete>
</mapper>